############################### LEARNINGS ##################################
1) in vlookup VLOOKUP(G2,$'sheet-212'.$G$2:$J$8131,4,1) ##The last 1 is important, else it will give erroneous result
############################################################################

#https://gsuite.google.com/learning-center/products/sheets/cheat-sheet/sheets-cheat-sheet.pdf
#https://support.google.com/docs/table/25273?hl=en

#Filter
Select columns : Data (select from tab) -> Filter

#Freeze
View -> Freeze -> Select how many rows from the top needs to be frozen i.e. kept as header while moving through the sheet

#VLOOKUP with IFERROR
=IFERROR(VLOOKUP(G2,$'sheet-212'.$G$2:$J$8131,4,1),0)
##EXPLANATION::     = IFERROR(VLOOKUP(<CELL_WHOSE_VALUE_IS_TO_BE_LOOKED_FOR>,<TABLE_FROM_WHICH_VALUE_HAS_TO_BE_BROUGHT_ENSURE_ITS_FIRST_COLUMN_MATCHES_WITH_CELL_WHOSE_VALUES_IS_TO_BE_LOOKED_FOR>,<N_WHERE_NTH_COLUMN_FROM_THE_LEFT_OF_TABLE_MENTIONED_JUST_ONE_POSITION_BEFORE_HAS_TO_BE_BROUGHT>,<FLAG_FOR_ASCENDING_OR_DESCENDING>),<VALUE_TO_BE_PUT_IF_NO_MATCH_IS_FOUND>)

#IFELSE
=IF(M3+J3>50,50-J3,J3)
##EXPLANATION::     = IF(<CONDITION>,<WHEN_CONDITION_HOLDS_TRUE>,<WHEN_CONDITION_HOLDS_WRONG>)

#LIBREOFFICE_calc OR GOOGLE-DOCS_sheet
Data -> Pivot Table

#SPLIT : text divide to parts
=SPLIT(text, delimiter, [split_by_each], [remove_empty_text])

#RETURN ELEMENT OF A PARTICULAR ROW NUMBER, COLUMN NUMBER
=INDEX(reference, row_number, column_number)

#length of text
=LEN(text)

#extract character from left
=LEFT(string, number_of_characters)

#extract character from right
=RIGHT(string, number_of_characters)

#concat
=CONCAT(value1, value2)

#find index/position of a character in a string
=FIND("character",text)

#substring
use LEFT, RIGHT with FIND 

#using regular expression
=IF(RegExMatch(A1,"Bla"),"YES","NO")

#SEARCH position of a smaller string in a larger string
=SEARCH(search_for, text_to_search, [starting_at])

#DATES
=TODAY() - 7
=DATE(YEAR(TODAY()), MONTH(TODAY()), 1)
=WEEKDAY("7/20/1969") #By default, counts starting with Sunday = 1.

#TEXT
=TEXT(text to format, format to display)

"$0.00"       Currency
"YYYY-MM-DD"  Dates
"#"           Integer
"0.000"       Floating numbers





#AVERAGE 
Statistical Returns the numerical average value in a dataset, ignoring text. AVERAGEIFS Statistical Returns the average of a range that depends upon multiple criteria. CHOOSE Lookup Returns an element from a list of choices based on index. 

#COUNT 
Statistical Returns the count of the number of numeric values in a dataset. COUNTIF Statistical Returns a conditional count across a range. DATE Date Converts a provided year, month, and day into a date.

#FIND 
Text Returns the position at which a string is first found within text. GETPIVOTDATA Text Extracts an aggregated value from a pivot table that corresponds to the specified row and column headings.

#IF 
Logical Returns one value if a logical expression is true and another if it is false.

#INDEX 
Lookup Returns the content of a cell, specified by row and column offset.

#INT 
Math Rounds a number down to the nearest integer that’s less than or equal to it.

#LOOKUP 
Lookup Looks through a row or column for a key and returns the value of the cell in a result range located in the same position as the search row or column. 

#MATCH 
Lookup Returns the relative position of an item in a range that matches a specified value. MAX Statistical Returns the maximum value in a numeric dataset. MIN Statistical Returns the minimum value in a numeric dataset. 

#NOW 
Date Returns the current date and time as a date value. ROUND Math Rounds a number to a certain number of decimal places according to standard rules.

#SUM 
Math Returns the sum of a series of numbers and/or cells.

#SUMIF 
Math Returns a conditional sum across a range. TODAY Date Returns the current date as a date value. VLOOKUP Lookup Searches down the first column of a range for a key and returns the value of a specified cell in the row found.

###PLOTS###
Select chart from upper right hand side panel
Double click on the chart to update, make changes
Series means y-axis
$Play around it$

#Resize row height, column width
double click over the row name or column name

=GOOGLETRANSLATE(A1, "en" , "ru")
=TRANSPOSE (A1:F15)
=TODAY()
=UPPER(A1)
=LEN(G7)
=TRIM(G6) #Remove unnecessary before and after text
=CONCATENATE(A1,B1)
=UNIQUE(A1:A6) #creates a unique list from a list having duplicate elements
=ISEMAIL(A1)

#FILTER
=filter(range; condition1, condition2,...)
=filter(A2:A12;A2:A12>37; A2:A12<60)


#Substitute
=substitute(text, search_text, new text, occurrence)
=substitute(A2, "Jack", "Mike",1)
#occurrence (optional, in this case “1”) indicates how many occurrences of the search text are to be replaced

=DAYS(end_date, start_date)
=HOUR(time)
=MINUTE(time)
=MONTH(date)


#Returns the first n items in a data set after performing a sort.
=SORTN(range, [n], [display_ties_mode], [sort_column1, is_ascending1], ...)

=sort()

=ISNUMBER(value)
=ISREF(value)
=ISTEXT(value)
=ISURL(value)
=N(value)
=ISBLANK(value)
=ISDATE(value)
=ISEMAIL(value)
=ISFORMULA(cell)
=SWITCH(expression, case1, value1, [default or case2, value2], …)
=OR(logical_expression1, [logical_expression2, ...])	
=NOT(logical_expression)
=IFS(condition1, value1, [condition2, value2], …)
=IFERROR(value, [value_if_error])
=IF(logical_expression, value_if_true, value_if_false)
=AND(logical_expression1, [logical_expression2, ...])
=COLUMNS(range)      #Returns the number of columns in a specified array or range.
=ROWS(range)
=CHOOSE(index, choice1, [choice2, ...])
=ROW([cell_reference])   #Returns the row number of a specified cell
=COLUMN([cell_reference])
=MATCH(search_key, range, [search_type])
=HYPERLINK(url, [link_label])
=FLOOR(value, [factor])     #Rounds a number down to the nearest integer multiple of specified significance. 
=INT(value)
=RANDBETWEEN(low, high)
=ROUND(value, [places])
=ROUNDDOWN(value, [places])
=ROUNDUP(value, [places])
=CEILING(value, [factor])
=SQRT(value)
=SUM(value1, [value2, ...])
=SUMIF(range, criterion, [sum_range])
=EQ(value1, value2) #equality check
=GT(value1, value2) #Returns `TRUE` if the first argument is strictly greater than the second, and `FALSE` otherwise. Equivalent to the `>` operator
= GTE(value1, value2) #means >=  
=LT(value1, value2)
=LTE(value1, value2)
=MINUS(value1, value2)
=MULTIPLY(factor1, factor2)
=ADD(value1, value2)
=POW(base, exponent)
=TO_TEXT(value)
=TO_PURE_NUMBER(value)
=TO_PERCENT(value)
=TO_DOLLARS(value)
=TO_DATE(value)
=CONVERT(value, start_unit, end_unit)
=FORECAST(x, data_y, data_x)   #Calculates the expected y-value for a specified x based on a linear regression of a dataset
=FTEST(range1, range2) #Returns the probability associated with an F-test for equality of variances. Determines whether two samples are likely to have come from populations with the same variance.
=GEOMEAN(value1, value2)
=HARMEAN(value1, value2)
=INTERCEPT(data_y, data_x) #Calculates the y-value at which the line resulting from linear regression of a dataset will intersect the y-axis (x=0).
=LARGE(data, n) #Returns the nth largest element from a data set, where n is user-defined
=MAX(value1, [value2, ...])
=MEDIAN(value1, [value2, ...]
=MIN(value1, [value2, ...])
=MODE(value1, [value2, ...])
=PERCENTILE(data, percentile)
=PERMUT(n, k) #Returns the value of the normal distribution with mean 0 and standard deviation 1
=SKEW(value1, value2) #Calculates the skewness of a dataset, which describes the symmetry of that dataset about the mean. 
=SLOPE(data_y, data_x) #Calculates the slope of the line resulting from linear regression of a dataset. 
=SMALL(data, n) #Returns the nth smallest element from a data set, where n is user-defined. 
=STANDARDIZE(value, mean, standard_deviation) #Calculates the normalized equivalent of a random variable given mean and standard deviation of the distribution
=STDEV(value1, [value2, ...]) #Calculates the standard deviation based on a sample.
=ZTEST(data, value, [standard_deviation])
=AVERAGEIF(criteria_range, criterion, [average_range])
=AVERAGEIFS(average_range, criteria_range1, criterion1, [criteria_range2, criterion2, ...])
=REPLACE(text, position, length, new_text)
=REGEXREPLACE(text, regular_expression, replacement)
=REGEXMATCH(text, regular_expression)
=REGEXEXTRACT(text, regular_expression)
=UPPER(text)
=MID(string, starting_at, extract_length)
=LOWER(text)
=LEN(text)
=LEFT(string, [number_of_characters])
=FIXED(number, [number_of_places], [suppress_separator]) #Formats a number with a fixed number of decimal places
=PROPER(text_to_capitalize) #Capitalizes each word in a specified string


